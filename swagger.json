{
  "openapi": "3.0.1",
  "info": {
    "title": "REST API for Swagger Documentation",
    "version": "1.0.0"
  },
  "schemes": [
    "http"
  ],
  "servers": [
    {
      "url": "http://localhost:5000/"
    }
  ],
  "paths": {
    "/api": {
      "get": {
        "tags": [
          "Dummy Endpoint"
        ],
        "summary": "Sends a dummy response from server",
        "description": "Sends a dummy response from server.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HelloSchemaBody"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/upload": {
      "post": {
        "tags": [
          "Supabase Endpoints"
        ],
        "summary": "Uploads a video to Supabase Storage",
        "description": "Uploads a video to Supabase Storage.",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/SupabaseUploadSchemaHeader"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupabaseUploadSchemaBody"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/merge": {
      "post": {
        "tags": [
          "FFMPEG Endpoints"
        ],
        "summary": "Fetches videos from Supabase Storage, trims, merges, applies watermark and uploads them back to Supabase Storage",
        "description": "Fetches videos from Supabase Storage, trims, merges, applies watermark and uploads them back to Supabase Storage.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FfmpegMergeSchemaHeader"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FfmpegMergeSchemaBody"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/getMetaData": {
      "post": {
        "tags": [
          "FFMPEG Endpoints"
        ],
        "summary": "Fetches video from Supabase Storage, and returns its metadata",
        "description": "Fetches video from Supabase Storage, and returns its metadata.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FfmpegGetMetadataSchemaHeader"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FfmpegGetMetadataSchemaBody"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "HelloSchemaBody": {
        "properties": {
          "message": {
            "type": "string",
            "example": "Hello from vidcraft backend!"
          },
          "data": {
            "type": "string",
            "example": null
          },
          "error": {
            "type": "string",
            "example": null
          }
        }
      },
      "SupabaseUploadSchemaHeader": {
        "properties": {
          "video": {
            "type": "string",
            "format": "binary",
            "example": "Flying Vigilante - Trim.mp4"
          }
        }
      },
      "SupabaseUploadSchemaBody": {
        "properties": {
          "message": {
            "type": "string",
            "example": "Video uploaded successfully"
          },
          "data": {
            "type": "object",
            "example": {
              "path": "1686243841037-Flying Vigilante - Trim.mp4"
            }
          },
          "error": {
            "type": "string",
            "example": null
          }
        }
      },
      "FfmpegMergeSchemaHeader": {
        "properties": {
          "id1": {
            "type": "string",
            "example": "8347fe42-5528-450f-9427-4c0748d19aa7"
          },
          "id2": {
            "type": "string",
            "example": "425f00f7-d76b-443f-8a87-34ed89aee3d1"
          }
        }
      },
      "FfmpegMergeSchemaBody": {
        "properties": {
          "message": {
            "type": "string",
            "example": "Video processed successfully"
          },
          "data": {
            "type": "object",
            "example": {
              "fileName": "merged/PROCESSED-1686237727831-8347fe42-5528-450f-9427-4c0748d19aa7-425f00f7-d76b-443f-8a87-34ed89aee3d1.mp4"
            }
          },
          "error": {
            "type": "string",
            "example": null
          }
        }
      },
      "FfmpegGetMetadataSchemaHeader": {
        "properties": {
          "id": {
            "type": "string",
            "example": "1ed28eac-49b4-4611-90a6-3da2e659bfaf"
          }
        }
      },
      "FfmpegGetMetadataSchemaBody": {
        "properties": {
          "message": {
            "type": "string",
            "example": "Codecs processed!"
          },
          "data": {
            "type": "object",
            "example": {
              "streams": [
                {
                  "index": 0,
                  "codec_name": "h264",
                  "codec_long_name": "H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10",
                  "profile": "Main",
                  "codec_type": "video",
                  "codec_tag_string": "avc1",
                  "codec_tag": "0x31637661",
                  "width": 1920,
                  "height": 1032,
                  "coded_width": 1920,
                  "coded_height": 1032,
                  "closed_captions": 0,
                  "film_grain": 0,
                  "has_b_frames": 0,
                  "sample_aspect_ratio": "1:1",
                  "display_aspect_ratio": "80:43",
                  "pix_fmt": "yuv420p",
                  "level": 40,
                  "color_range": "unknown",
                  "color_space": "unknown",
                  "color_transfer": "unknown",
                  "color_primaries": "unknown",
                  "chroma_location": "left",
                  "field_order": "progressive",
                  "refs": 1,
                  "is_avc": "true",
                  "nal_length_size": 4,
                  "id": "0x1",
                  "r_frame_rate": "30/1",
                  "avg_frame_rate": "30/1",
                  "time_base": "1/30000",
                  "start_pts": 0,
                  "start_time": 0,
                  "duration_ts": 822000,
                  "duration": 27.4,
                  "bit_rate": 4451268,
                  "max_bit_rate": "N/A",
                  "bits_per_raw_sample": 8,
                  "nb_frames": 822,
                  "nb_read_frames": "N/A",
                  "nb_read_packets": "N/A",
                  "extradata_size": 45,
                  "tags": {
                    "creation_time": "2021-12-28T08:41:56.000000Z",
                    "language": "und",
                    "handler_name": "VideoHandler",
                    "vendor_id": "[0][0][0][0]",
                    "encoder": "AVC Coding"
                  },
                  "disposition": {
                    "default": 1,
                    "dub": 0,
                    "original": 0,
                    "comment": 0,
                    "lyrics": 0,
                    "karaoke": 0,
                    "forced": 0,
                    "hearing_impaired": 0,
                    "visual_impaired": 0,
                    "clean_effects": 0,
                    "attached_pic": 0,
                    "timed_thumbnails": 0,
                    "captions": 0,
                    "descriptions": 0,
                    "metadata": 0,
                    "dependent": 0,
                    "still_image": 0
                  }
                },
                {
                  "index": 1,
                  "codec_name": "aac",
                  "codec_long_name": "AAC (Advanced Audio Coding)",
                  "profile": "LC",
                  "codec_type": "audio",
                  "codec_tag_string": "mp4a",
                  "codec_tag": "0x6134706d",
                  "sample_fmt": "fltp",
                  "sample_rate": 48000,
                  "channels": 2,
                  "channel_layout": "stereo",
                  "bits_per_sample": 0,
                  "initial_padding": 0,
                  "id": "0x2",
                  "r_frame_rate": "0/0",
                  "avg_frame_rate": "0/0",
                  "time_base": "1/48000",
                  "start_pts": 0,
                  "start_time": 0,
                  "duration_ts": 1315838,
                  "duration": 27.413292,
                  "bit_rate": 117356,
                  "max_bit_rate": "N/A",
                  "bits_per_raw_sample": "N/A",
                  "nb_frames": 1285,
                  "nb_read_frames": "N/A",
                  "nb_read_packets": "N/A",
                  "extradata_size": 2,
                  "tags": {
                    "creation_time": "2021-12-28T08:41:56.000000Z",
                    "language": "und",
                    "handler_name": "SoundHandler",
                    "vendor_id": "[0][0][0][0]"
                  },
                  "disposition": {
                    "default": 1,
                    "dub": 0,
                    "original": 0,
                    "comment": 0,
                    "lyrics": 0,
                    "karaoke": 0,
                    "forced": 0,
                    "hearing_impaired": 0,
                    "visual_impaired": 0,
                    "clean_effects": 0,
                    "attached_pic": 0,
                    "timed_thumbnails": 0,
                    "captions": 0,
                    "descriptions": 0,
                    "metadata": 0,
                    "dependent": 0,
                    "still_image": 0
                  }
                }
              ],
              "format": {
                "filename": "ffmpeg\\temp\\file.mp4",
                "nb_streams": 2,
                "nb_programs": 0,
                "format_name": "mov,mp4,m4a,3gp,3g2,mj2",
                "format_long_name": "QuickTime / MOV",
                "start_time": 0,
                "duration": 27.413292,
                "size": 15660183,
                "bit_rate": 4570099,
                "probe_score": 100,
                "tags": {
                  "major_brand": "mp42",
                  "minor_version": "0",
                  "compatible_brands": "mp41isom",
                  "creation_time": "2021-12-28T08:38:17.000000Z",
                  "artist": "Microsoft Game DVR",
                  "title": "Times table - Google Chrome"
                }
              },
              "chapters": []
            }
          },
          "error": {
            "type": "string",
            "example": null
          }
        }
      }
    }
  }
}